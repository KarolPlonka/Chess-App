<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_classpieces_1_1_pawn" xml:lang="en-US">
<title>pieces.Pawn Class Reference</title>
<indexterm><primary>pieces.Pawn</primary></indexterm>
<para>

<para>stores properities of <link linkend="_classpieces_1_1_pawn">Pawn</link>, inherits form <link linkend="_classpieces_1_1_piece">Piece</link> class </para>
 
</para>
<para>Inheritance diagram for pieces.Pawn:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="classpieces_1_1_pawn.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>def <link linkend="_classpieces_1_1_pawn_1abfa133539cd1046f01788cd280328550">__init__</link> (self, color, y, x, win)</para>
</listitem>
            <listitem><para>def <link linkend="_classpieces_1_1_pawn_1aa29541599a8bb233fb89883c892e700d">move_piece</link> (self, y, x, board=None)</para>

<para>moves piece img using move() method, changes actual coordinates and checks if current move is leading to promotion </para>
</listitem>
            <listitem><para>def <link linkend="_classpieces_1_1_pawn_1a4e0364444c5de97128d2dc33dd705917">all_moves</link> (self, board, prev_board=None, check_king_safety=True)</para>

<para>Creates list of all possible moves that <link linkend="_classpieces_1_1_pawn">Pawn</link> object can make. </para>
</listitem>
            <listitem><para>def <link linkend="_classpieces_1_1_pawn_1acc3596ce7877f394bb0e4586cdc576eb">move_forward</link> (self, board)</para>

<para>Returns list of all possible moves that <link linkend="_classpieces_1_1_pawn">Pawn</link> object can make in vertical direction. </para>
</listitem>
            <listitem><para>def <link linkend="_classpieces_1_1_pawn_1adf25302fcfd5b20cd45a4a21652c13a4">take_diagonal</link> (self, board)</para>

<para>Returns list of all possible take moves of <link linkend="_classpieces_1_1_pawn">Pawn</link>. </para>
</listitem>
            <listitem><para>def <link linkend="_classpieces_1_1_pawn_1a1684da925f4adfb57f1d2c31cb31ff50">en_passant</link> (self, board, prev_board)</para>
</listitem>
            <listitem><para>def <link linkend="_classpieces_1_1_pawn_1a10eeff470f0c319228309245c0a4f21e">promotion</link> (self, board)</para>
</listitem>
            <listitem><para><anchor xml:id="_classpieces_1_1_pawn_1a871a1a918bba2239c25ae81d259fb2ab"/>def <emphasis role="strong">__str__</emphasis> (self)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Public Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classpieces_1_1_pawn_1a2df22e5c8c18d96f27d190766b66ad3f"/><emphasis role="strong">color</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpieces_1_1_pawn_1a8c63145592bde30d49006a0f33a5778b"/><emphasis role="strong">img_url</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpieces_1_1_pawn_1aef5831c23202b3ddc149fb68d831c101"/><emphasis role="strong">x</emphasis></para>
</listitem>
            <listitem><para><anchor xml:id="_classpieces_1_1_pawn_1a4ff65b39e1895cc04e224d3447c21ee5"/><emphasis role="strong">y</emphasis></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Attributes    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_classpieces_1_1_pawn_1abb0a0dfb09b4294d6ec51a7f5700792e"/>string <emphasis role="strong">white_img_url</emphasis> = &apos;pieces/w_pawn_png_shadow_128px.png&apos;</para>
</listitem>
            <listitem><para><anchor xml:id="_classpieces_1_1_pawn_1a77b2459cfa27e9425a274cd8fe858289"/>string <emphasis role="strong">black_img_url</emphasis> = &apos;pieces/b_pawn_png_shadow_128px.png&apos;</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>stores properities of <link linkend="_classpieces_1_1_pawn">Pawn</link>, inherits form <link linkend="_classpieces_1_1_piece">Piece</link> class </para>



<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>white_img_url</entry><entry>
<para>(str): path to white <link linkend="_classpieces_1_1_pawn">Pawn</link> png </para>
</entry>
                            </row>
                            <row>
<entry>black_img_url</entry><entry>
<para>(str): path to black <link linkend="_classpieces_1_1_pawn">Pawn</link> png </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_classpieces_1_1_pawn_1abfa133539cd1046f01788cd280328550"/><section>
    <title>__init__()</title>
<indexterm><primary>__init__</primary><secondary>pieces.Pawn</secondary></indexterm>
<indexterm><primary>pieces.Pawn</primary><secondary>__init__</secondary></indexterm>
<para><computeroutput>def pieces.Pawn.__init__ ( self,  color,  y,  x,  win)</computeroutput></para><para>
Reimplemented from <link linkend="_classpieces_1_1_piece">pieces.Piece</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_classpieces_1_1_pawn_1a4e0364444c5de97128d2dc33dd705917"/><section>
    <title>all_moves()</title>
<indexterm><primary>all_moves</primary><secondary>pieces.Pawn</secondary></indexterm>
<indexterm><primary>pieces.Pawn</primary><secondary>all_moves</secondary></indexterm>
<para><computeroutput>def pieces.Pawn.all_moves ( self,  board,  prev_board = <computeroutput>None</computeroutput>
,  check_king_safety = <computeroutput>True</computeroutput>
)</computeroutput></para><para>

<para>Creates list of all possible moves that <link linkend="_classpieces_1_1_pawn">Pawn</link> object can make. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry><entry>
<para>board (list): stores all pieces in appropiate fields </para>
</entry>
                            </row>
                            <row>
<entry></entry><entry>
<para>prev_board (list): previous state of board (list) </para>
</entry>
                            </row>
                            <row>
<entry></entry><entry>
<para>check_king_safety (bool): information about king safety</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>moves (list): stores coordinates of all possible fields where object can move </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classpieces_1_1_pawn_1a1684da925f4adfb57f1d2c31cb31ff50"/><section>
    <title>en_passant()</title>
<indexterm><primary>en_passant</primary><secondary>pieces.Pawn</secondary></indexterm>
<indexterm><primary>pieces.Pawn</primary><secondary>en_passant</secondary></indexterm>
<para><computeroutput>def pieces.Pawn.en_passant ( self,  board,  prev_board)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry><entry>
<para>board (list): stores all pieces in appropiate fields </para>
</entry>
                            </row>
                            <row>
<entry></entry><entry>
<para>prev_board (list): previous state of board (list)</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>moves (list): field where <link linkend="_classpieces_1_1_pawn">Pawn</link> object can be after en passant move </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classpieces_1_1_pawn_1acc3596ce7877f394bb0e4586cdc576eb"/><section>
    <title>move_forward()</title>
<indexterm><primary>move_forward</primary><secondary>pieces.Pawn</secondary></indexterm>
<indexterm><primary>pieces.Pawn</primary><secondary>move_forward</secondary></indexterm>
<para><computeroutput>def pieces.Pawn.move_forward ( self,  board)</computeroutput></para><para>

<para>Returns list of all possible moves that <link linkend="_classpieces_1_1_pawn">Pawn</link> object can make in vertical direction. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry><entry>
<para>board (list): stores all pieces in appropiate fields</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>(list): all possible moves that <link linkend="_classpieces_1_1_pawn">Pawn</link> object can make in vertical direction </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classpieces_1_1_pawn_1aa29541599a8bb233fb89883c892e700d"/><section>
    <title>move_piece()</title>
<indexterm><primary>move_piece</primary><secondary>pieces.Pawn</secondary></indexterm>
<indexterm><primary>pieces.Pawn</primary><secondary>move_piece</secondary></indexterm>
<para><computeroutput>def pieces.Pawn.move_piece ( self,  y,  x,  board = <computeroutput>None</computeroutput>
)</computeroutput></para><para>

<para>moves piece img using move() method, changes actual coordinates and checks if current move is leading to promotion </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry><entry>
<para>y (int): vertical coordinate of where piece should be moved </para>
</entry>
                            </row>
                            <row>
<entry></entry><entry>
<para>x (int): horizontal coordinate of piece should be moved </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Reimplemented from <link linkend="_classpieces_1_1_piece_1a1fe74b40a6b4ad33bfbb5f67593375c5">pieces.Piece</link>.</para>
</section>
<anchor xml:id="_classpieces_1_1_pawn_1a10eeff470f0c319228309245c0a4f21e"/><section>
    <title>promotion()</title>
<indexterm><primary>promotion</primary><secondary>pieces.Pawn</secondary></indexterm>
<indexterm><primary>pieces.Pawn</primary><secondary>promotion</secondary></indexterm>
<para><computeroutput>def pieces.Pawn.promotion ( self,  board)</computeroutput></para>
<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry><entry>
<para>board (list): stores all pieces in appropiate fields</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>moves (list): field where <link linkend="_classpieces_1_1_pawn">Pawn</link> object can be after promotion move </para>
</formalpara>
</para>
</section>
<anchor xml:id="_classpieces_1_1_pawn_1adf25302fcfd5b20cd45a4a21652c13a4"/><section>
    <title>take_diagonal()</title>
<indexterm><primary>take_diagonal</primary><secondary>pieces.Pawn</secondary></indexterm>
<indexterm><primary>pieces.Pawn</primary><secondary>take_diagonal</secondary></indexterm>
<para><computeroutput>def pieces.Pawn.take_diagonal ( self,  board)</computeroutput></para><para>

<para>Returns list of all possible take moves of <link linkend="_classpieces_1_1_pawn">Pawn</link>. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry></entry><entry>
<para>board (list): stores all pieces in appropiate fields</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>moves (list): all possible moves that <link linkend="_classpieces_1_1_pawn">Pawn</link> object can make in diagonal direction </para>
</formalpara>
</para>
</section>
<para>
The documentation for this class was generated from the following file:</para>
pieces.py</section>
</section>
